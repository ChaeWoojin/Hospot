# -*- coding: utf-8 -*-
"""HospitalDatas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Wemv8--gC7upuwcId81fMbBSTx6tF_3p
"""
from urllib.parse import urlencode, unquote, quote_plus
import requests
from bs4 import BeautifulSoup as bs


class Api:

    def __init__(self, arr):
        self.value = []
        self.pageNow = 0
        self.pageTotal = 0
        self.key = "m9FjLDcj45iJhX56Y5Pe6cdBEyIemNLtD9n5%2BeBbopZjkQTlhKtXtqzikiGFBApfmU%2FCspdClYU6s1wDOc%2BsCw%3D%3D"
        self.keyDecode = [unquote(self.key, 'UTF-8')]
        self.array = self.keyDecode + arr
        self.params = ['ServiceKey', 'pageNo', 'numOfRows', 'sidoCd', 'sgguCd', 'emdongNm', 'yadmNm', 'zipCd', 'clCd',
                       'dgsbjtCd', 'xPos', 'yPos', 'radius']
        self.url = "http://apis.data.go.kr/B551182/hospInfoService1/getHospBasisList1"
        self.queryParams = '?' + urlencode({quote_plus(self.params[i]): self.array[i] for i in range(13)})
        self.res = requests.get(self.url + self.queryParams)
        self.xml = self.res.text
        self.html = bs(self.xml, 'html.parser')

    def target(self, target):  # 입력 변수 arr, 읽으려는 값 target
        self.value = []
        for x in self.html.find_all(target): self.value.append(x.text)

    def item(self, param):  # 읽을 값들 list로 받음
        self.value = []
        for x in self.html.find_all('item'):
            temp = {}
            for y in param:
                for z in x.find_all(y):
                    temp[y] = z.text
                if y not in temp.keys():
                    temp[y] = None
            self.value.append(temp)

    def page(self):
        for x in self.html.find_all('pageno'): self.pageNow = x.text
        for x in self.html.find_all('totalcount'): self.pageTotal = int(x.text)
        for x in self.html.find_all('numofrows'): self.pageTotal = (self.pageTotal + int(x.text) - 1) // int(x.text)

class Hospital:
    def __init__(self, name, romanname, addr, romanaddr, telno, url, xpos, ypos, pageNow, pageTotal):
        self.name=name
        self.romanname=romanname
        self.addr=addr
        self.romanaddr=romanaddr
        self.telno=telno
        self.url=url
        self.xpos=xpos
        self.ypos=ypos
        self.pageNow=pageNow
        self.pageTotal=pageTotal

class Pos:
    def __init__(self, name, romanname, xpos, ypos):
        self.name = name
        self.romanname = romanname
        self.xpos=xpos
        self.ypos=ypos

"""
hosName = pd.DataFrame(api.value)
hosName.to_excel('/content/drive/MyDrive/KAIST/TS222/HospitalName.xlsx')

hosNames = pd.read_excel('/content/drive/MyDrive/KAIST/TS222/HospitalNameRoman.xlsx')
hosNames = hosNames.drop('Unnamed: 0', axis = 1)
hosNames = hosNames.rename(columns = {0: "KorName", 1: "RomanName"})


params = ['addr', 'clcdnm', 'sidocdnm', 'sggucdnm', 'emdongnm', 'postno', 'telno', 'hospurl', 'estbdd', 'drtotcnt', 'xpos', 'ypos']

api.item(params)

datas = api.value
pdDatas = pd.DataFrame(datas)
excelDatas = pd.concat([hosNames, pdDatas], axis = 1)
excelDatas.to_excel('/content/drive/MyDrive/KAIST/TS222/HospitalDatas.xlsx')

subject = {'00': '일반의', '01': '내과', '02': '신경과', '03': '정신건강의학과', '04': '외과', '05': '정형외과', '06': '신경외과', '07': '흉부외과', '08': '성형외과', '09': '마취통증의학과', '10': '산부인과', '11': '소아청소년과', '12': '안과', '13': '이비인후과', '14': '피부과', '15': '비뇨의학과', '16': '영상의학과', '17': '방사선종양학과', '18': '병리과', '19': '진단검사의학과', '20': '결핵과', '21': '재활의학과', '22': '핵의학과', '23': '가정의학과', '24': '응급의학과', '25': '직업환경의학과', '26': '예방의학과', '50': '구강악안면외과', '51': '치과보철과', '52': '치과교정과', '53': '소아치과', '54': '치주과', '55': '치과보존과', '56': '구강내과', '57': '영상치의학과', '58': '구강병리과', '59': '예방치과', '61': '통합치의학과', '80': '한방내과', '81': '한방부인과', '82': '한방소아과', '83': '한방안이비인후피부과', '84': '한방신경정신과', '85': '침구과', '86': '한방재활의학과', '87': '사상체질과', '88': '한방응급'}

import copy
dataSub = copy.deepcopy(datas)
dataOri = copy.deepcopy(datas)
for x in subject:
  apiSub = Api(['1', '3000', '250000', '', '', '', '', '', x, '', '', ''])
  apiSub.item(params)
  check = apiSub.value
  for i in range(len(dataOri)):
    dataSub[i][subject[x]] = False
    for y in check:
      if y == dataOri[i]:
        dataSub[i][subject[x]] = True

pdSub = pd.DataFrame(dataSub)
excelSub = pd.concat([hosNames, pdSub], axis = 1)
excelSub = excelSub.drop(params, axis = 1)
excelSub.to_excel('/content/drive/MyDrive/KAIST/TS222/HospitalSubject.xlsx')

excelSub
"""
